{"version":3,"sources":["components/map/Map.js","components/toolbar/Toolbar.js","components/toast/Toast.js","components/sideDrawer/SideDrawer.js","components/backdrop/Backdrop.js","components/searchList/SearchList.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scriptError","map","window","google","maps","document","getElementById","id","options","mapLoad","_this2","setState","onScriptLoad","script","createElement","src","async","defer","addEventListener","e","firstIndexScript","getElementsByTagName","parentNode","insertBefore","react_default","a","className","aria-label","index_es","icon","role","Component","Toolbar","logoClasses","searchInputClass","searchIconClass","showSearch","onClick","drawerClickHandler","display","lib","placeholder","autoFocus","minLength","debounceTimeout","onChange","event","search","target","value","query","toast","toastClass","show","message","sideDrawer","drawerClasses","tabIndex","name","label","category","searchByCategory","key","href","backdrop","click","searchList","searchListClasses","values","venue","onKeyPress","handleListClick","CLIENT_ID","CLIENT_SECRET","App","bind","assertThisInitialized","configInfoWindow","drawerToggleClickHandler","backdropDrawer","backdropList","handleSearchByName","listDisplayHandler","venuesByCategories","venues","showVenues","details","markers","sideDrawerOpen","infoWindow","showList","showToast","msgToast","InfoWindow","maxWidth","maxHeight","response","ok","console","log","Error","status","json","error","toString","includes","msg","setTimeout","data","charAt","toUpperCase","slice","sort","b","_this3","bounds","LatLngBounds","ms","content","marker","Marker","position","lat","location","lng","animation","Animation","DROP","title","extend","addListener","fitBounds","clearMarkers","setMap","deleteMarkers","that","createMarkers","markerIndex","length","find","element","filter","searchName","showSelectedMarkers","_this4","close","searched","_this5","getMap","_this6","setContent","setMarker","setContentInfoWindow","setAnimation","BOUNCE","open","url","URL","concat","URLSearchParams","client_id","client_secret","v","locale","fetch","then","handleRequestErrors","previousState","toConsumableArray","catch","handleToasts","photo","bestPhoto","prefix","suffix","categories","shortName","address","contact","phone","hours","timeframes","forEach","time","days","renderedTime","prevState","showAllMarkers","_this7","hasOwnProperty","reloadMarkers","objectSpread","near","categoryId","radius","orderVenues","groups","items","backdrop_Backdrop","components_toolbar_Toolbar","sideDrawer_SideDrawer","searchList_SearchList","components_map_Map","center","zoom","mapTypeControl","toast_Toast","library","add","fab","faSun","faSuitcase","faCocktail","faUtensils","faInfoCircle","faSearch","faBars","faExclamationTriangle","faFoursquare","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","process","origin","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.262ce8ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Map.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nclass Map extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scriptError: false   \r\n    };\r\n  }\r\n\r\n  onScriptLoad() {\r\n    const map = new window.google.maps.Map(\r\n      document.getElementById(this.props.id),\r\n      this.props.options);\r\n    this.props.mapLoad(map);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!window.google) {\r\n\r\n    \t//create google maps script\r\n      let script = document.createElement('script');\r\n      script.src = `https://maps.google.com/maps/api/js?key=AIzaSyALa3cDehIN5lKkIcA0yeOwx_cUil_AWK4`;\r\n      script.async = true;\r\n\t\t  script.defer = true;\r\n\r\n\t\t  //We cannot access google.maps until it's finished loading\r\n      script.addEventListener('load', e => {\r\n        this.onScriptLoad();\r\n        this.setState({scriptError: false})\r\n      })\r\n      script.addEventListener('error', e => {\r\n        this.setState({scriptError: true})\r\n        this.props.mapLoad(null);\r\n      })\r\n\r\n\r\n      let firstIndexScript = document.getElementsByTagName('script')[0];\r\n      firstIndexScript.parentNode.insertBefore(script, firstIndexScript);\r\n\r\n    } else {\r\n      this.setState({scriptError: false})\r\n      this.onScriptLoad();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (this.state.scriptError ? \r\n      <div className='map-error' aria-label='Error loading map'><FontAwesomeIcon className='map-error-icon' icon=\"exclamation-triangle\" /><p>Google Maps couldn't be Load</p><p>Please try to reload the page</p></div> :\r\n      <div className='map' id={this.props.id} role=\"application\" aria-label='Münster City Map' />);\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport './Toolbar.css';\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Toolbar = props => {\r\n\r\n  let logoClasses = 'toolbar-logo';\r\n  let searchInputClass = 'toolbar-search-input';\r\n  let searchIconClass = 'toolbar-search-icon';\r\n  if (props.showSearch) {\r\n    searchInputClass = 'toolbar-search-input open';\r\n    logoClasses = 'toolbar-logo close';\r\n    searchIconClass = 'toolbar-search-icon close';\r\n  }\r\n\r\n\r\n  return (\r\n    <header className='toolbar'>\r\n      <nav className='toolbar-navigation'>\r\n        <button aria-label=\"Side Menu\" className='toolbar-menu' onClick={props.drawerClickHandler}><FontAwesomeIcon icon=\"bars\" /></button>\r\n        <div className={logoClasses}><h1>Münster City Map</h1></div>\r\n        <div className='spacer'/>\r\n        <button aria-label=\"open search input\" className={searchIconClass} onClick={props.display}><FontAwesomeIcon icon=\"search\" /></button>\r\n        <DebounceInput\r\n        className={searchInputClass}\r\n        placeholder='Search'\r\n        autoFocus\r\n        minLength={2}\r\n        debounceTimeout={300}\r\n        aria-label='Search by name'\r\n        onChange={event => props.search(event.target.value)} \r\n        value={props.query}/>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Toast.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst toast = props => {\r\n\r\n\tlet toastClass = 'toast';\r\n  if (props.show) {\r\n    toastClass = 'toast visible';\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className={toastClass} role='alert'><FontAwesomeIcon icon=\"exclamation-triangle\" /><p>{props.message}</p></div>\r\n\t);\r\n}\t\r\n\r\nexport default toast;","import React from 'react';\r\nimport './SideDrawer.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst sideDrawer = props => {  \r\n\r\n  let drawerClasses = 'side-drawer';\r\n  if (props.show) {\r\n    drawerClasses = 'side-drawer open';\r\n  }\r\n  const categories = [{name: 'restaurants', id:'4bf58dd8d48988d1c4941735', label:'Restaurants', icon:'utensils'},\r\n                      {name: 'nightlife', id:'4d4b7105d754a06376d81259', label:'Nightlife', icon:'cocktail'},\r\n                      {name: 'outdoor', id:'4d4b7105d754a06377d81259', label:'Outdoor', icon:'sun'},\r\n                      {name: 'travel', id:'4d4b7105d754a06379d81259', label:'Travel', icon: 'suitcase'},\r\n                      {name: 'informationCenter',id:'4f4530164b9074f6e4fb00ff', label:'Information Center', icon:'info-circle'}];\r\n  return (\r\n    <nav className={drawerClasses} tabIndex=\"0\">\r\n      {categories.map(category => {\r\n        if(category.name === props.category)\r\n          return <button className='options-button clicked' onClick={() => props.searchByCategory(category.id, category.name)} key={category.id} aria-label={category.label}><FontAwesomeIcon className=\"side-drawer-icons\" icon={category.icon}/>{category.label}</button>\r\n        return <button className='options-button' onClick={() => props.searchByCategory(category.id, category.name)} key={category.id} aria-label={category.label}><FontAwesomeIcon className=\"side-drawer-icons\" icon={category.icon}/>{category.label}</button>\r\n      })}\r\n      <div className='foursquare'>\r\n        <a  href=\"https://de.foursquare.com/\" aria-label='Powered by foursquare'>Powered by <FontAwesomeIcon className=\"foursquare-icon\" icon={['fab', 'foursquare']}/></a>\r\n        </div>\r\n    </nav>\r\n  );}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n\t<div className='backdrop' onClick={props.click}></div>\r\n\t);\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport './SearchList.css';\r\n\r\n\r\nconst searchList = props => {\r\n\tlet searchListClasses = 'search-list';\r\n  if (props.show) {\r\n    searchListClasses = 'search-list open';\r\n  }\r\n\treturn (\r\n\t\t<nav className={searchListClasses} tabIndex=\"0\">\r\n\t\t\t<ul tabIndex=\"0\">\r\n\t\t\t\t{props.values.map(value => {\r\n\t\t\t\t\treturn(<li role=\"button\" key={value.venue.id} onKeyPress={() => props.handleListClick(value.venue.id)} onClick={() => props.handleListClick(value.venue.id)}>{value.venue.name}</li>);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t); \r\n}\r\n\r\nexport default searchList;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Map from './components/map/Map';\r\nimport Toolbar from './components/toolbar/Toolbar';\r\nimport Toast from './components/toast/Toast';\r\nimport SideDrawer from './components/sideDrawer/SideDrawer';\r\nimport Backdrop from './components/backdrop/Backdrop';\r\nimport SearchList from './components/searchList/SearchList';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faFoursquare } from '@fortawesome/free-brands-svg-icons'\r\nimport { faSun, faSuitcase, faCocktail, faUtensils, faInfoCircle, faSearch, faBars, faExclamationTriangle} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n//Initialize Foursquare parameteters for search\r\nconst FOURSQUARE_API = 'https://api.foursquare.com/v2/venues/explore?';\r\nconst CLIENT_ID = \"WCSYL05LCDFT1FZUPPCKTTTAGXHIJW35BSM0ZB2ASSN1AS30\"; \r\nconst CLIENT_SECRET = \"XWO5JGWXXJCJEBHAGHIQEAPCD02Y5THUQLZDLLG1NJW2RUKU\";\r\nconst NEAR = 'Münster';\r\nconst RADIUS = '3000';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.mapLoad = this.mapLoad.bind(this);\r\n    this.configInfoWindow = this.configInfoWindow.bind(this);\r\n    this.handleListClick = this.handleListClick.bind(this);\r\n    this.drawerToggleClickHandler = this.drawerToggleClickHandler.bind(this);\r\n    this.backdropDrawer = this.backdropDrawer.bind(this);\r\n    this.backdropList = this.backdropList.bind(this);\r\n    this.handleSearchByName = this.handleSearchByName.bind(this);\r\n    this.searchByCategory = this.searchByCategory.bind(this);\r\n    this.listDisplayHandler = this.listDisplayHandler.bind(this);\r\n\r\n    this.state = {\r\n      venuesByCategories: {},   //load all venues devided by categories(restaurats, nightlife...)\r\n      venues: [],               //load the venues from chosen category\r\n      showVenues: [],           //controll the showing venues from all venues of one category\r\n      details: [],              //save the details from venues that ware already clicked\r\n      markers: [],              //control the showing markers\r\n      map: null,\r\n      sideDrawerOpen: false,    //control the state from sidedrawer menu\r\n      infoWindow: null,\r\n      showList: false,          //contro the state from the search list\r\n      query: '',\r\n      category: 'restaurants',  //the actual showing category\r\n      showToast: false,\r\n      msgToast: ''   \r\n    };\r\n  }\r\n  \r\n  // Load Map with restaurants markers\r\n  mapLoad(map) {\r\n    if(map !== null) {\r\n      this.setState({map: map, infoWindow: new window.google.maps.InfoWindow({maxWidth: 350, maxHeight: 400})});\r\n    \r\n      //after loadding map search by category passing categoryID from Restaurants\r\n      this.searchByCategory('4bf58dd8d48988d1c4941735', 'restaurants');\r\n\r\n    }\r\n  }\r\n\r\n  // Handle fetch request erros\r\n  handleRequestErrors(response) {\r\n    if (!response.ok) {\r\n      console.log(response);\r\n        throw Error(response.status);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  // different Toast message depending on the error \r\n  handleToasts(error) {\r\n    if(error.toString().includes('403')){\r\n      this.showToast('Unable to responde! Daily Limit Reached!');\r\n    } else if(error.toString().includes('500')) {\r\n      this.showToast('Unable to connect with Server! Please try again.');\r\n    } else if (error.toString().includes('Failed to fetch')) {\r\n      this.showToast('Please check your Internet Connection.');\r\n    } else if (this.state.map === null) {\r\n      this.showToast('Map Error! Please try to reload the page.');\r\n    } else {\r\n      this.showToast('Error! Please try again.');\r\n    }\r\n  }\r\n\r\n  showToast (msg) {\r\n    this.setState({\r\n      showToast: true, msgToast: msg\r\n    }, () => {\r\n      setTimeout(() =>\r\n        this.setState({ showToast: false })\r\n    ,  3500)\r\n    })\r\n  }\r\n\r\n  // order venues for the first letter of the name\r\n  orderVenues(data){\r\n    data = data.map(venue => {\r\n      const name = venue.venue.name;\r\n      venue.venue.name = name.charAt(0).toUpperCase() + name.slice(1);\r\n      return venue;\r\n    })\r\n    data.sort((function(a, b){\r\n        return (a.venue.name <= b.venue.name ? -1 : 1);\r\n      }));\r\n    this.setState({venues: data, showVenues:data});\r\n    return data;\r\n  }\r\n\r\n  // Create new markers\r\n  createMarkers(){\r\n\r\n    //create bounds for the map with the actual markers\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    let map = this.state.map;\r\n\r\n    let ms = this.state.venues.map(content => {\r\n      // Create A Marker\r\n      const marker = new window.google.maps.Marker({\r\n        position: {lat: content.venue.location.lat , lng: content.venue.location.lng},\r\n        map: map,\r\n        animation: window.google.maps.Animation.DROP,\r\n        title: content.venue.name,\r\n        id: content.venue.id\r\n      });\r\n\r\n      bounds.extend(marker.position);\r\n\r\n      marker.addListener('click', () => {\r\n        this.configInfoWindow(marker, content.venue);\r\n      })\r\n      return marker;\r\n    });\r\n\r\n    map.fitBounds(bounds);\r\n    this.setState({markers: ms, map:map});\r\n  }\r\n\r\n  // Removes the markers from the map, but keeps them in the markers array.\r\n  clearMarkers() {\r\n    let clearMarkers = this.state.markers.slice();\r\n    clearMarkers =  clearMarkers.map(marker => {\r\n      marker.setMap(null);\r\n      return marker;\r\n    });\r\n\r\n    this.setState({markers: clearMarkers});\r\n  }\r\n\r\n  // Deletes all markers in the array by removing references to them.\r\n  deleteMarkers() {\r\n    this.clearMarkers();\r\n    this.setState({markers: []});\r\n  }\r\n\r\n  // Recreate markers\r\n  reloadMarkers(){\r\n    this.deleteMarkers();\r\n    const that = this;\r\n    setTimeout(function() {\r\n      that.createMarkers();\r\n    }, 0);\r\n  }\r\n\r\n  // Handle the click at the venues list\r\n  handleListClick(id) {\r\n\r\n    //close the list\r\n    this.backdropList();\r\n    \r\n    this.clearMarkers();\r\n\r\n    let markers = this.state.markers.slice();\r\n    let markerIndex;\r\n    \r\n    // search marker with the designated id\r\n    for(markerIndex=0; markerIndex<markers.length; markerIndex++){\r\n      if(markers[markerIndex].id === id){\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if(markerIndex < markers.length){\r\n      markers[markerIndex].setMap(this.state.map);\r\n      this.setState({markers: markers});\r\n      const content = this.state.venues.find(function (element) {\r\n        return (element.venue.id === id);\r\n      });\r\n      this.configInfoWindow(markers[markerIndex], content.venue);\r\n    }\r\n  }\r\n\r\n  handleSearchByName (query){\r\n    if(query === ''){   //with empty query show all venues\r\n      this.setState({showVenues: this.state.venues, query:''});\r\n    } else {\r\n      //only show the venues that pass the uery filter\r\n      let showVenues = this.state.showVenues.slice();\r\n      showVenues = showVenues.filter(value => {\r\n        const name = value.venue.name.toUpperCase();\r\n        const searchName = query.toUpperCase();\r\n        return name.includes(searchName);\r\n      });\r\n      this.setState({showVenues: showVenues, query:query});\r\n    }\r\n    this.showSelectedMarkers();\r\n  }\r\n\r\n  showSelectedMarkers() {\r\n    if(this.state.map != null) {\r\n      let infoWindow = this.state.infoWindow;\r\n      infoWindow.close();\r\n      this.setState({infoWindow: infoWindow});\r\n\r\n      let markers = this.state.markers.slice() \r\n      let searched = this.state.showVenues.slice();\r\n\r\n      //show only the markers from the venues that are in the search list\r\n      markers = markers.map(marker => {\r\n        const value = searched.find(function (element) {\r\n        return (element.venue.id === marker.id) ? element : null;\r\n        });\r\n        if(value) {\r\n          marker.setMap(this.state.map);\r\n        } else {\r\n          marker.setMap(null);\r\n        }\r\n        return marker;\r\n      }) \r\n      this.setState({markers: markers});\r\n    }\r\n  }\r\n\r\n  showAllMarkers() {\r\n    if(this.state.map !== null) {\r\n      let infoWindow = this.state.infoWindow;\r\n      infoWindow.close();\r\n      this.setState({infoWindow: infoWindow});\r\n\r\n      let markers = this.state.markers.slice();\r\n    \r\n      const noMap = markers.filter(marker => marker.getMap() === null);\r\n\r\n      //markers with null map need to be add to the map\r\n      if(noMap.length > 0){\r\n        markers = markers.map(marker => {\r\n          marker.setMap(this.state.map);\r\n          return marker;\r\n        })\r\n        this.setState({markers: markers, showVenues: this.state.venues, query:''});\r\n      } else {\r\n        this.setState({query:''});\r\n      }  \r\n    } \r\n  }\r\n\r\n  configInfoWindow(marker, content) {\r\n    \r\n    let infoWindow = this.state.infoWindow;\r\n\r\n    //close with there is any info window open\r\n    infoWindow.close();\r\n    //reset the content\r\n    infoWindow.setContent('');\r\n    //change the marker to the new\r\n    infoWindow.marker = marker;\r\n\r\n    // Make sure the marker property is cleared if the infowindow is closed.\r\n    infoWindow.addListener('closeclick',function(){\r\n      infoWindow.setMarker = null;\r\n    });\r\n    \r\n    //serach the details in the state variable \r\n    const details = this.state.details.find(function (element) {\r\n        return (element.id === content.id);\r\n    });\r\n    \r\n    //if wasn't found then do a online request\r\n    if(!details){\r\n\r\n      marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n\r\n      let url = new URL(`https://api.foursquare.com/v2/venues/${content.id}`);\r\n      url.search = new URLSearchParams({client_id: CLIENT_ID, client_secret: CLIENT_SECRET, v: \"20181025\", locale:'en'});\r\n\r\n      fetch(url)\r\n      .then(this.handleRequestErrors)\r\n      .then(data => {\r\n        // add the new details information to the state\r\n        this.setState(previousState => ({\r\n          details: [...previousState.details, data.response.venue],\r\n        }));\r\n        this.setContentInfoWindow(infoWindow, data.response.venue);\r\n        setTimeout(function() {\r\n          marker.setAnimation(null);\r\n          infoWindow.open(marker.map, marker);\r\n        }, 800);        \r\n      }).catch(error => {\r\n        //show info indow with error coment\r\n        // this.setContentInfoWindow(infoWindow,null, 'Foursquare error. Please try again.');      \r\n        \r\n        //Animate the marker´but dont open info window\r\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n        const that=this;\r\n        setTimeout(function() {\r\n          marker.setAnimation(null);\r\n          that.handleToasts(error);\r\n        }, 1200);\r\n      });\r\n    } else {\r\n      this.setContentInfoWindow(infoWindow,details);\r\n      //Animate the marker\r\n      marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n      setTimeout(function() {\r\n        marker.setAnimation(null);\r\n        infoWindow.open(marker.map, marker);\r\n       }, 1200);\r\n      this.setState({infoWindow: infoWindow});\r\n    }\r\n      \r\n    \r\n    \r\n\r\n  }\r\n\r\n  setContentInfoWindow(infoWindow, details, error) {\r\n    let content = '';\r\n    if(!details){\r\n      content+= `<div class='info-window'><p>${error}</p></div>`\r\n    } \r\n    else {\r\n\r\n      let photo = '';\r\n      if(details.bestPhoto) {\r\n        photo= details.bestPhoto.prefix + '208x120' + details.bestPhoto.suffix\r\n      } else {\r\n        photo= 'https://via.placeholder.com/208x120.png?text=No+Image'\r\n        // photo = '../noImageDetails.jpg'\r\n      }\r\n\r\n      content = `<div class='info-window'>\r\n                 <img src=${photo} alt='${details.name} provided by foursquare'>\r\n                 <h2>${details.name}</h2>`;\r\n\r\n      if(details.categories){\r\n        content += `<p>${details.categories[0].shortName}</p>`\r\n      }\r\n      if(details.location.address){\r\n        content += `<p>${details.location.address}</p>`\r\n      }\r\n      if(details.contact.phone){\r\n        content += `<p>${details.contact.phone}</p>`\r\n      }\r\n      if(details.hours){\r\n        const timeframes=details.hours.timeframes;\r\n        content += `<div class='opening'>`;\r\n        content += `<p class='opening-title'><strong >${details.hours.status}</strong></p>`;\r\n        timeframes.forEach(openingHours);\r\n        content += `</div>`\r\n      }\r\n      content += `</div>`\r\n    }\r\n\r\n    infoWindow.setContent(content);\r\n    function openingHours(time) {\r\n      content += `<p class='opening-days'>${time.days}</p>\r\n      <p class='opening-hours'>${time.open[0].renderedTime}</p>`;\r\n    }\r\n\r\n  }\r\n\r\n  drawerToggleClickHandler() {\r\n    this.setState(prevState => ({\r\n      sideDrawerOpen: !prevState.sideDrawerOpen\r\n    }));\r\n    this.setState({showList:false});\r\n    this.showAllMarkers(); \r\n  }\r\n\r\n  backdropDrawer() {\r\n    this.setState({sideDrawerOpen:false});\r\n  }\r\n\r\n  backdropList() {\r\n    //close the list\r\n    this.setState({showList: false, query:''});\r\n  }\r\n\r\n  listDisplayHandler() {\r\n    this.setState({showList:true, sideDrawerOpen:false, showVenues:this.state.venues});\r\n    this.showAllMarkers();\r\n  }\r\n\r\n  searchByCategory(id, name) {\r\n    this.setState({query:'', showList:false, category:name, sideDrawerOpen: false});\r\n    /*Check if the category already exists, if true*/\r\n    if(this.state.venuesByCategories.hasOwnProperty(name) && this.state.venuesByCategories[name].length !== 0){\r\n      this.setState({venues: this.state.venuesByCategories[name], showVenues:this.state.venuesByCategories[name], category:name});\r\n      this.reloadMarkers();\r\n    } else {\r\n      let venuesByCategories= {...this.state.venuesByCategories};\r\n      venuesByCategories[name] = [];\r\n      let url = new URL(FOURSQUARE_API);\r\n      url.search = new URLSearchParams({client_id: CLIENT_ID, client_secret: CLIENT_SECRET, near:NEAR, categoryId: id, v: \"20181025\", radius: RADIUS});\r\n      fetch(url)\r\n        .then(this.handleRequestErrors)\r\n        .then(data => {\r\n          let venues = this.orderVenues(data.response.groups[0].items);\r\n          this.deleteMarkers();\r\n          this.createMarkers();\r\n          venuesByCategories[name]=venues;\r\n          this.setState({venuesByCategories: venuesByCategories});\r\n        })\r\n        .catch(error => {\r\n          this.handleToasts(error);\r\n        });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let backdrop;\r\n\r\n    if(this.state.sideDrawerOpen) {\r\n      backdrop = <Backdrop click={this.backdropDrawer}/>;\r\n    }\r\n    if(this.state.showList){\r\n      backdrop = <Backdrop click={this.backdropList}/>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} search={this.handleSearchByName} query={this.state.query} display={this.listDisplayHandler} showSearch={this.state.showList}/>\r\n        <SideDrawer show={this.state.sideDrawerOpen}  searchByCategory={this.searchByCategory} category={this.state.category}/>\r\n        {backdrop}\r\n        <main>\r\n          <SearchList values={this.state.showVenues} handleListClick={this.handleListClick} show={this.state.showList}/>\r\n          <Map id=\"map\" options={{center: {lat: 51.961773, lng: 7.621385}, zoom: 14, mapTypeControl: false}} mapLoad= {this.mapLoad}/>\r\n          <Toast show={this.state.showToast} message={this.state.msgToast}/>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlibrary.add(fab, faSun, faSuitcase, faCocktail, faUtensils, faInfoCircle, faSearch, faBars, faExclamationTriangle, faFoursquare);\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}