{"version":3,"sources":["components/map/Map.js","components/toolbar/Toolbar.js","components/toast/Toast.js","components/sideDrawer/SideDrawer.js","components/backdrop/Backdrop.js","components/searchList/SearchList.js","App.js","serviceWorker.js","index.js"],"names":["Map","map","window","google","maps","document","getElementById","this","props","id","options","mapLoad","_this","onScriptLoad","script","createElement","src","async","defer","addEventListener","e","firstIndexScript","getElementsByTagName","parentNode","insertBefore","react_default","a","className","role","aria-label","Component","Toolbar","logoClasses","searchInputClass","searchIconClass","showSearch","onClick","drawerClickHandler","index_es","icon","display","lib","placeholder","autoFocus","minLength","debounceTimeout","onChange","event","search","target","value","query","toast","toastClass","show","message","sideDrawer","drawerClasses","tabIndex","name","label","category","searchByCategory","key","href","backdrop","click","searchList","searchListClasses","values","venue","onKeyPress","handleListClick","CLIENT_ID","CLIENT_SECRET","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","configInfoWindow","drawerToggleClickHandler","backdropDrawer","backdropList","handleSearchByName","listDisplayHandler","state","venuesByCategories","venues","showVenues","details","markers","sideDrawerOpen","infoWindow","showList","showToast","msgToast","setState","InfoWindow","maxWidth","maxHeight","response","ok","console","log","Error","status","json","error","toString","includes","msg","_this2","setTimeout","data","charAt","toUpperCase","slice","sort","b","_this3","bounds","LatLngBounds","ms","content","marker","Marker","position","lat","location","lng","animation","Animation","DROP","title","extend","addListener","fitBounds","clearMarkers","setMap","deleteMarkers","that","createMarkers","markerIndex","length","find","element","filter","searchName","showSelectedMarkers","_this4","close","searched","_this5","getMap","_this6","setContent","setMarker","setContentInfoWindow","setAnimation","BOUNCE","open","url","URL","concat","URLSearchParams","client_id","client_secret","v","locale","fetch","then","handleRequestErrors","previousState","toConsumableArray","catch","handleToasts","photo","bestPhoto","prefix","suffix","categories","shortName","address","contact","phone","hours","timeframes","forEach","time","days","renderedTime","prevState","showAllMarkers","_this7","hasOwnProperty","reloadMarkers","objectSpread","near","categoryId","radius","orderVenues","groups","items","backdrop_Backdrop","components_toolbar_Toolbar","sideDrawer_SideDrawer","searchList_SearchList","components_map_Map","center","zoom","mapTypeControl","toast_Toast","library","add","fab","faSun","faSuitcase","faCocktail","faUtensils","faInfoCircle","faSearch","faBars","faExclamationTriangle","faFoursquare","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","process","origin","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a2650236.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Map.css';\r\n\r\nclass Map extends Component {\r\n\r\n  onScriptLoad() {\r\n    const map = new window.google.maps.Map(\r\n      document.getElementById(this.props.id),\r\n      this.props.options);\r\n    this.props.mapLoad(map);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!window.google) {\r\n\r\n    \t//create google maps script\r\n      let script = document.createElement('script');\r\n      script.src = `https://maps.google.com/maps/api/js?key=AIzaSyALa3cDehIN5lKkIcA0yeOwx_cUil_AWK4`;\r\n      script.async = true;\r\n\t\t  script.defer = true;\r\n\r\n\t\t  //We cannot access google.maps until it's finished loading\r\n      script.addEventListener('load', e => {\r\n        this.onScriptLoad();\r\n      })\r\n\r\n      let firstIndexScript = document.getElementsByTagName('script')[0];\r\n      firstIndexScript.parentNode.insertBefore(script, firstIndexScript);\r\n\r\n    } else {\r\n      this.onScriptLoad();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className='map' id={this.props.id} role=\"application\" aria-label='Münster City Map' />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport './Toolbar.css';\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Toolbar = props => {\r\n\r\n  let logoClasses = 'toolbar-logo';\r\n  let searchInputClass = 'toolbar-search-input';\r\n  let searchIconClass = 'toolbar-search-icon';\r\n  if (props.showSearch) {\r\n    searchInputClass = 'toolbar-search-input open';\r\n    logoClasses = 'toolbar-logo close';\r\n    searchIconClass = 'toolbar-search-icon close';\r\n  }\r\n\r\n\r\n  return (\r\n    <header className='toolbar'>\r\n      <nav className='toolbar-navigation'>\r\n        <button aria-label=\"Side Menu\" className='toolbar-menu' onClick={props.drawerClickHandler}><FontAwesomeIcon icon=\"bars\" /></button>\r\n        <div className={logoClasses}><h1>Münster City Map</h1></div>\r\n        <div className='spacer'/>\r\n        <button aria-label=\"open search input\" className={searchIconClass} onClick={props.display}><FontAwesomeIcon icon=\"search\" /></button>\r\n        <DebounceInput\r\n        className={searchInputClass}\r\n        placeholder='Search'\r\n        autoFocus\r\n        minLength={2}\r\n        debounceTimeout={300}\r\n        aria-label='Search by name'\r\n        onChange={event => props.search(event.target.value)} \r\n        value={props.query}/>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Toast.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst toast = props => {\r\n\r\n\tlet toastClass = 'toast';\r\n  if (props.show) {\r\n    toastClass = 'toast visible';\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className={toastClass} role='alert'><FontAwesomeIcon icon=\"exclamation-triangle\" /><p>{props.message}</p></div>\r\n\t);\r\n}\t\r\n\r\nexport default toast;","import React from 'react';\r\nimport './SideDrawer.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst sideDrawer = props => {  \r\n\r\n  let drawerClasses = 'side-drawer';\r\n  if (props.show) {\r\n    drawerClasses = 'side-drawer open';\r\n  }\r\n  const categories = [{name: 'restaurants', id:'4bf58dd8d48988d1c4941735', label:'Restaurants', icon:'utensils'},\r\n                      {name: 'nightlife', id:'4d4b7105d754a06376d81259', label:'Nightlife', icon:'cocktail'},\r\n                      {name: 'outdoor', id:'4d4b7105d754a06377d81259', label:'Outdoor', icon:'sun'},\r\n                      {name: 'travel', id:'4d4b7105d754a06379d81259', label:'Travel', icon: 'suitcase'},\r\n                      {name: 'informationCenter',id:'4f4530164b9074f6e4fb00ff', label:'Information Center', icon:'info-circle'}];\r\n  return (\r\n    <nav className={drawerClasses} tabIndex=\"0\">\r\n      {categories.map(category => {\r\n        if(category.name === props.category)\r\n          return <button className='options-button clicked' onClick={() => props.searchByCategory(category.id, category.name)} key={category.id} aria-label={category.label}><FontAwesomeIcon className=\"side-drawer-icons\" icon={category.icon}/>{category.label}</button>\r\n        return <button className='options-button' onClick={() => props.searchByCategory(category.id, category.name)} key={category.id} aria-label={category.label}><FontAwesomeIcon className=\"side-drawer-icons\" icon={category.icon}/>{category.label}</button>\r\n      })}\r\n      <div className='foursquare'>\r\n        <a  href=\"https://de.foursquare.com/\" aria-label='Powered by foursquare'>Powered by <FontAwesomeIcon className=\"foursquare-icon\" icon={['fab', 'foursquare']}/></a>\r\n        </div>\r\n    </nav>\r\n  );}\r\n\r\nexport default sideDrawer;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n\t<div className='backdrop' onClick={props.click}></div>\r\n\t);\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport './SearchList.css';\r\n\r\n\r\nconst searchList = props => {\r\n\tlet searchListClasses = 'search-list';\r\n  if (props.show) {\r\n    searchListClasses = 'search-list open';\r\n  }\r\n\treturn (\r\n\t\t<nav className={searchListClasses} tabIndex=\"0\">\r\n\t\t\t<ul tabIndex=\"0\">\r\n\t\t\t\t{props.values.map(value => {\r\n\t\t\t\t\treturn(<li role=\"button\" key={value.venue.id} onKeyPress={() => props.handleListClick(value.venue.id)} onClick={() => props.handleListClick(value.venue.id)}>{value.venue.name}</li>);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t); \r\n}\r\n\r\nexport default searchList;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Map from './components/map/Map';\r\nimport Toolbar from './components/toolbar/Toolbar';\r\nimport Toast from './components/toast/Toast';\r\nimport SideDrawer from './components/sideDrawer/SideDrawer';\r\nimport Backdrop from './components/backdrop/Backdrop';\r\nimport SearchList from './components/searchList/SearchList';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faFoursquare } from '@fortawesome/free-brands-svg-icons'\r\nimport { faSun, faSuitcase, faCocktail, faUtensils, faInfoCircle, faSearch, faBars, faExclamationTriangle} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n//Initialize Foursquare parameteters for search\r\nconst FOURSQUARE_API = 'https://api.foursquare.com/v2/venues/explore?';\r\nconst CLIENT_ID = \"WCSYL05LCDFT1FZUPPCKTTTAGXHIJW35BSM0ZB2ASSN1AS30\"; \r\nconst CLIENT_SECRET = \"XWO5JGWXXJCJEBHAGHIQEAPCD02Y5THUQLZDLLG1NJW2RUKU\";\r\nconst NEAR = 'Münster';\r\nconst RADIUS = '3000';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.mapLoad = this.mapLoad.bind(this);\r\n    this.configInfoWindow = this.configInfoWindow.bind(this);\r\n    this.handleListClick = this.handleListClick.bind(this);\r\n    this.drawerToggleClickHandler = this.drawerToggleClickHandler.bind(this);\r\n    this.backdropDrawer = this.backdropDrawer.bind(this);\r\n    this.backdropList = this.backdropList.bind(this);\r\n    this.handleSearchByName = this.handleSearchByName.bind(this);\r\n    this.searchByCategory = this.searchByCategory.bind(this);\r\n    this.listDisplayHandler = this.listDisplayHandler.bind(this);\r\n\r\n    this.state = {\r\n      venuesByCategories: {},   //load all venues devided by categories(restaurats, nightlife...)\r\n      venues: [],               //load the venues from chosen category\r\n      showVenues: [],           //controll the showing venues from all venues of one category\r\n      details: [],              //save the details from venues that ware already clicked\r\n      markers: [],              //control the showing markers\r\n      map: null,\r\n      sideDrawerOpen: false,    //control the state from sidedrawer menu\r\n      infoWindow: null,\r\n      showList: false,          //contro the state from the search list\r\n      query: '',\r\n      category: 'restaurants',  //the actual showing category\r\n      showToast: false,\r\n      msgToast: ''   \r\n    };\r\n  }\r\n  \r\n  // Load Map with restaurants markers\r\n  mapLoad(map) {\r\n    this.setState({map: map, infoWindow: new window.google.maps.InfoWindow({maxWidth: 350, maxHeight: 400})});\r\n    \r\n    //after loadding map search by category passing categoryID from Restaurants\r\n    this.searchByCategory('4bf58dd8d48988d1c4941735', 'restaurants');\r\n  }\r\n\r\n  // Handle fetch request erros\r\n  handleRequestErrors(response) {\r\n    if (!response.ok) {\r\n      console.log(response);\r\n        throw Error(response.status);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  // different Toast message depending on the error \r\n  handleToasts(error) {\r\n    if(error.toString().includes('403')){\r\n      this.showToast('Unable to responde! Daily Limit Reached');\r\n    } else if(error.toString().includes('500')) {\r\n      this.showToast('Unable to connect with Server! Please try again');\r\n    } else if (error.toString().includes('Failed to fetch')) {\r\n      this.showToast('Please check your Internet Connection');\r\n    } else {\r\n      this.showToast('Error! Please try again');\r\n    }\r\n  }\r\n\r\n  showToast (msg) {\r\n    this.setState({\r\n      showToast: true, msgToast: msg\r\n    }, () => {\r\n      setTimeout(() =>\r\n        this.setState({ showToast: false })\r\n    ,  3500)\r\n    })\r\n  }\r\n\r\n  // order venues for the first letter of the name\r\n  orderVenues(data){\r\n    data = data.map(venue => {\r\n      const name = venue.venue.name;\r\n      venue.venue.name = name.charAt(0).toUpperCase() + name.slice(1);\r\n      return venue;\r\n    })\r\n    data.sort((function(a, b){\r\n        return (a.venue.name <= b.venue.name ? -1 : 1);\r\n      }));\r\n    this.setState({venues: data, showVenues:data});\r\n    return data;\r\n  }\r\n\r\n  // Create new markers\r\n  createMarkers(){\r\n\r\n    //create bounds for the map with the actual markers\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    let map = this.state.map;\r\n\r\n    let ms = this.state.venues.map(content => {\r\n      // Create A Marker\r\n      const marker = new window.google.maps.Marker({\r\n        position: {lat: content.venue.location.lat , lng: content.venue.location.lng},\r\n        map: map,\r\n        animation: window.google.maps.Animation.DROP,\r\n        title: content.venue.name,\r\n        id: content.venue.id\r\n      });\r\n\r\n      bounds.extend(marker.position);\r\n\r\n      marker.addListener('click', () => {\r\n        this.configInfoWindow(marker, content.venue);\r\n      })\r\n      return marker;\r\n    });\r\n\r\n    map.fitBounds(bounds);\r\n    this.setState({markers: ms, map:map});\r\n  }\r\n\r\n  // Removes the markers from the map, but keeps them in the markers array.\r\n  clearMarkers() {\r\n    let clearMarkers = this.state.markers.slice();\r\n    clearMarkers =  clearMarkers.map(marker => {\r\n      marker.setMap(null);\r\n      return marker;\r\n    });\r\n\r\n    this.setState({markers: clearMarkers});\r\n  }\r\n\r\n  // Deletes all markers in the array by removing references to them.\r\n  deleteMarkers() {\r\n    this.clearMarkers();\r\n    this.setState({markers: []});\r\n  }\r\n\r\n  // Recreate markers\r\n  reloadMarkers(){\r\n    this.deleteMarkers();\r\n    const that = this;\r\n    setTimeout(function() {\r\n      that.createMarkers();\r\n    }, 0);\r\n  }\r\n\r\n  // Handle the click at the venues list\r\n  handleListClick(id) {\r\n\r\n    //close the list\r\n    this.backdropList();\r\n    \r\n    this.clearMarkers();\r\n\r\n    let markers = this.state.markers.slice();\r\n    let markerIndex;\r\n    \r\n    // search marker with the designated id\r\n    for(markerIndex=0; markerIndex<markers.length; markerIndex++){\r\n      if(markers[markerIndex].id === id){\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if(markerIndex < markers.length){\r\n      markers[markerIndex].setMap(this.state.map);\r\n      this.setState({markers: markers});\r\n      const content = this.state.venues.find(function (element) {\r\n        return (element.venue.id === id);\r\n      });\r\n      this.configInfoWindow(markers[markerIndex], content.venue);\r\n    }\r\n  }\r\n\r\n  handleSearchByName (query){\r\n    if(query === ''){   //with empty query show all venues\r\n      this.setState({showVenues: this.state.venues, query:''});\r\n    } else {\r\n      //only show the venues that pass the uery filter\r\n      let showVenues = this.state.showVenues.slice();\r\n      showVenues = showVenues.filter(value => {\r\n        const name = value.venue.name.toUpperCase();\r\n        const searchName = query.toUpperCase();\r\n        return name.includes(searchName);\r\n      });\r\n      this.setState({showVenues: showVenues, query:query});\r\n    }\r\n    this.showSelectedMarkers();\r\n  }\r\n\r\n  showSelectedMarkers() {\r\n    let infoWindow = this.state.infoWindow;\r\n    infoWindow.close();\r\n    this.setState({infoWindow: infoWindow});\r\n\r\n    let markers = this.state.markers.slice() \r\n    let searched = this.state.showVenues.slice();\r\n\r\n    //show only the markers from the venues that are in the search list\r\n    markers = markers.map(marker => {\r\n      const value = searched.find(function (element) {\r\n      return (element.venue.id === marker.id) ? element : null;\r\n      });\r\n      if(value) {\r\n        marker.setMap(this.state.map);\r\n      } else {\r\n        marker.setMap(null);\r\n      }\r\n      return marker;\r\n    }) \r\n    this.setState({markers: markers});\r\n  }\r\n\r\n  showAllMarkers() {\r\n    let infoWindow = this.state.infoWindow;\r\n    infoWindow.close();\r\n    this.setState({infoWindow: infoWindow});\r\n\r\n    let markers = this.state.markers.slice();\r\n    \r\n    const noMap = markers.filter(marker => marker.getMap() === null);\r\n\r\n    //markers with null map need to be add to the map\r\n    if(noMap.length > 0){\r\n      markers = markers.map(marker => {\r\n        marker.setMap(this.state.map);\r\n        return marker;\r\n      })\r\n      this.setState({markers: markers, showVenues: this.state.venues, query:''});\r\n    } else {\r\n      this.setState({query:''});\r\n    }    \r\n  }\r\n\r\n  configInfoWindow(marker, content) {\r\n    \r\n    let infoWindow = this.state.infoWindow;\r\n\r\n    //close with there is any info window open\r\n    infoWindow.close();\r\n    //reset the content\r\n    infoWindow.setContent('');\r\n    //change the marker to the new\r\n    infoWindow.marker = marker;\r\n\r\n    // Make sure the marker property is cleared if the infowindow is closed.\r\n    infoWindow.addListener('closeclick',function(){\r\n      infoWindow.setMarker = null;\r\n    });\r\n    \r\n    //serach the details in the state variable \r\n    const details = this.state.details.find(function (element) {\r\n        return (element.id === content.id);\r\n    });\r\n    \r\n    //if wasn't found then do a online request\r\n    if(!details){\r\n\r\n      let url = new URL(`https://api.foursquare.com/v2/venues/${content.id}`);\r\n      url.search = new URLSearchParams({client_id: CLIENT_ID, client_secret: CLIENT_SECRET, v: \"20181025\", locale:'en'});\r\n\r\n      fetch(url)\r\n      .then(this.handleRequestErrors)\r\n      .then(data => {\r\n        // add the new details information to the state\r\n        this.setState(previousState => ({\r\n          details: [...previousState.details, data.response.venue],\r\n        }));\r\n        // send the information to set the content of the infowindow\r\n        this.setContentInfoWindow(infoWindow, data.response.venue);\r\n      }).catch(error => {\r\n        this.handleToasts(error);\r\n\r\n        //show info indow with error coment\r\n        // this.setContentInfoWindow(infoWindow,null, 'Foursquare error. Please try again.');      \r\n        \r\n        //Animate the marker´but dont open info window\r\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n        setTimeout(function() {\r\n          marker.setAnimation(null);\r\n        }, 1200);\r\n      });\r\n    } else {\r\n      this.setContentInfoWindow(infoWindow,details);\r\n      //Animate the marker\r\n      marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n      setTimeout(function() {\r\n        marker.setAnimation(null);\r\n        infoWindow.open(marker.map, marker);\r\n       }, 1200);\r\n      this.setState({infoWindow: infoWindow});\r\n    }\r\n      \r\n    \r\n    \r\n\r\n  }\r\n\r\n  setContentInfoWindow(infoWindow, details, error) {\r\n    let content = '';\r\n    if(!details){\r\n      content+= `<div class='info-window'><p>${error}</p></div>`\r\n    } \r\n    else {\r\n\r\n      let photo = '';\r\n      if(details.bestPhoto) {\r\n        photo= details.bestPhoto.prefix + '208x120' + details.bestPhoto.suffix\r\n      } else {\r\n        photo= 'https://via.placeholder.com/208x120.png?text=No+Image'\r\n        // photo = '../noImageDetails.jpg'\r\n      }\r\n\r\n      content = `<div class='info-window'>\r\n                 <img src=${photo} alt='${details.name} provided by foursquare'>\r\n                 <h2>${details.name}</h2>`;\r\n\r\n      if(details.categories){\r\n        content += `<p>${details.categories[0].shortName}</p>`\r\n      }\r\n      if(details.location.address){\r\n        content += `<p>${details.location.address}</p>`\r\n      }\r\n      if(details.contact.phone){\r\n        content += `<p>${details.contact.phone}</p>`\r\n      }\r\n      if(details.hours){\r\n        const timeframes=details.hours.timeframes;\r\n        content += `<div class='opening'>`;\r\n        content += `<p class='opening-title'><strong >${details.hours.status}</strong></p>`;\r\n        timeframes.forEach(openingHours);\r\n        content += `</div>`\r\n      }\r\n      content += `</div>`\r\n    }\r\n\r\n    infoWindow.setContent(content);\r\n    function openingHours(time) {\r\n      content += `<p class='opening-days'>${time.days}</p>\r\n      <p class='opening-hours'>${time.open[0].renderedTime}</p>`;\r\n    }\r\n  }\r\n\r\n  drawerToggleClickHandler() {\r\n    this.setState(prevState => ({\r\n      sideDrawerOpen: !prevState.sideDrawerOpen\r\n    }));\r\n    this.setState({showList:false});\r\n    this.showAllMarkers(); \r\n  }\r\n\r\n  backdropDrawer() {\r\n    this.setState({sideDrawerOpen:false});\r\n  }\r\n\r\n  backdropList() {\r\n    //close the list\r\n    this.setState({showList: false, query:''});\r\n  }\r\n\r\n  listDisplayHandler() {\r\n    this.setState({showList:true, sideDrawerOpen:false, showVenues:this.state.venues});\r\n    this.showAllMarkers();\r\n  }\r\n\r\n  searchByCategory(id, name) {\r\n    this.setState({query:'', showList:false, category:name, sideDrawerOpen: false});\r\n    /*Check if the category already exists, if true*/\r\n    if(this.state.venuesByCategories.hasOwnProperty(name) && this.state.venuesByCategories[name].length !== 0){\r\n      this.setState({venues: this.state.venuesByCategories[name], showVenues:this.state.venuesByCategories[name], category:name});\r\n      this.reloadMarkers();\r\n    } else {\r\n      let venuesByCategories= {...this.state.venuesByCategories};\r\n      venuesByCategories[name] = [];\r\n      let url = new URL(FOURSQUARE_API);\r\n      url.search = new URLSearchParams({client_id: CLIENT_ID, client_secret: CLIENT_SECRET, near:NEAR, categoryId: id, v: \"20181025\", radius: RADIUS});\r\n      fetch(url)\r\n        .then(this.handleRequestErrors)\r\n        .then(data => {\r\n          let venues = this.orderVenues(data.response.groups[0].items);\r\n          this.deleteMarkers();\r\n          this.createMarkers();\r\n          venuesByCategories[name]=venues;\r\n          this.setState({venuesByCategories: venuesByCategories});\r\n        })\r\n        .catch(error => {\r\n          this.handleToasts(error);\r\n        });\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let backdrop;\r\n\r\n    if(this.state.sideDrawerOpen) {\r\n      backdrop = <Backdrop click={this.backdropDrawer}/>;\r\n    }\r\n    if(this.state.showList){\r\n      backdrop = <Backdrop click={this.backdropList}/>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} search={this.handleSearchByName} query={this.state.query} display={this.listDisplayHandler} showSearch={this.state.showList}/>\r\n        <SideDrawer show={this.state.sideDrawerOpen}  searchByCategory={this.searchByCategory} category={this.state.category}/>\r\n        {backdrop}\r\n        <main>\r\n          <SearchList values={this.state.showVenues} handleListClick={this.handleListClick} show={this.state.showList}/>\r\n          <Map id=\"map\" options={{center: {lat: 51.961773, lng: 7.621385}, zoom: 14, mapTypeControl: false}} mapLoad= {this.mapLoad}/>\r\n          <Toast show={this.state.showToast} message={this.state.msgToast}/>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlibrary.add(fab, faSun, faSuitcase, faCocktail, faUtensils, faInfoCircle, faSearch, faBars, faExclamationTriangle, faFoursquare);\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}